Centro de Videojuegos - Management System

This project is a management system for a video game center, designed to handle player assignments to gaming stations, track playtime, and calculate revenue. It is written in Java and follows an object-oriented programming (OOP) approach, ensuring maintainability and scalability.

Features:
-*Assign Players to Stations: Registers a player in a specific gaming station and marks the station as occupied.
-*Add Playtime: Updates the playtime for a player in a station.
-*Change Playerâ€™s Station: Allows reassignment of a player to another station.
-*Record Player Exit: Finalizes the session for a player and frees the station for the next user.
-*Show Total Revenue: Displays the total revenue generated from all stations.

Code Structure:
1. Classes
-*Estaciones: Represents a gaming station with attributes such as player ID, name, playtime, revenue, and station state (e.g., "occupied").
-*Main: Contains the core program logic and initializes four gaming stations.
	*Provides methods to assign players, add playtime, and manage station states.
	*Handles the main menu interface and user interactions.
-*Menu: Handles user navigation through the available options.

2. Key Concepts

Object-Oriented Programming (OOP)

*Encapsulation: Private attributes with getter and setter methods in the Estaciones class.
*Polymorphism: Overriding the toString method to display station information.
*Modularization: Separation of responsibilities into different classes (e.g., Menu, Estaciones).

Control Structures

*Conditional statements (if, switch) handle user input and enforce constraints.
*Loops (for, do-while) manage station selection and menu navigation.

Data Management

*Arrays store and manage attributes of multiple gaming stations.

User Interaction

*The Scanner class captures and processes user input in real-time.

HOW TO RUN
Ensure you have a Java Development Kit (JDK) installed on your system.
Compile the files using the javac command and run the main class.

